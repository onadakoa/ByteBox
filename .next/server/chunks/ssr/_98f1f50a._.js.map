{"version":3,"sources":["turbopack:///[project]/node_modules/swr/dist/index/config-client-Bi4rgVRk.mjs/proxy.mjs","turbopack:///[project]/utils/api.ts/proxy.mjs","turbopack:///[project]/app/layout.tsx"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const S = registerClientReference(\n    function() { throw new Error(\"Attempted to call S() from the server but S is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/swr/dist/index/config-client-Bi4rgVRk.mjs <module evaluation>\",\n    \"S\",\n);\n","import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const API_HOSTNAME = registerClientReference(\n    function() { throw new Error(\"Attempted to call API_HOSTNAME() from the server but API_HOSTNAME is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/utils/api.ts <module evaluation>\",\n    \"API_HOSTNAME\",\n);\nexport const FETCHER = registerClientReference(\n    function() { throw new Error(\"Attempted to call FETCHER() from the server but FETCHER is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/utils/api.ts <module evaluation>\",\n    \"FETCHER\",\n);\nexport const JsonError = registerClientReference(\n    function() { throw new Error(\"Attempted to call JsonError() from the server but JsonError is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/utils/api.ts <module evaluation>\",\n    \"JsonError\",\n);\n","import {Metadata} from \"next\";\n\nimport \"./globals.css\";\nimport \"material-symbols\";\nimport {SWRConfig} from \"swr\";\nimport {FETCHER} from \"@/utils/api\";\n\n\nexport const metadata: Metadata = {\n    title: \"ByteBox\",\n}\n\n\nexport default function Layout({children}: { children: React.ReactNode }) {\n    return (\n        <html lang=\"pl\">\n        <body>\n        <SWRConfig value={{\n            fetcher: FETCHER,\n            revalidateOnMount: true,\n        }}>\n            {children}\n        </SWRConfig>\n        </body>\n        </html>\n    )\n}"],"names":[],"mappings":"8EACO,IAAM,EAAI,CAAA,EAAA,AADjB,EAAA,CAAA,CAAA,OACiB,uBAAA,AAAsB,EACnC,EADa,SACA,MAAM,AAAI,MAAM,gNAAkN,EAC/O,uFACA,qEAHG,IAAM,EAAI,GAAA,AADjB,EAAA,CAAA,CAAA,OACiB,uBAAA,AAAsB,EACnC,EADa,SACA,MAAM,AAAI,MAAM,gNAAkN,EAC/O,mEACA,yRCJJ,IAAA,EAAA,EAAA,CAAA,CAAA,OACO,IAAM,EAAe,CAAA,EAAA,EAAA,uBAAA,AAAsB,EAC9C,WADwB,AACX,MAAM,AAAI,MAAM,sOAAwO,EACrQ,6CACA,gBAES,EAAU,CAAA,EAAA,EAAA,uBAAA,AAAsB,EACzC,WADmB,AACN,MAAM,AAAI,MAAM,4NAA8N,EAC3P,6CACA,WAES,EAAY,CAAA,EAAA,EAAA,uBAAA,AAAsB,EAC3C,WADqB,AACR,MAAM,AAAI,MAAM,gOAAkO,EAC/P,6CACA,sHAdJ,IAAA,EAAA,EAAA,CAAA,CAAA,OACO,IAAM,EAAe,CAAA,EAAA,EAAA,uBAAA,AAAsB,EAC9C,WADwB,AACX,MAAM,AAAI,MAAM,sOAAwO,EACrQ,yBACA,gBAES,EAAU,CAAA,EAAA,EAAA,uBAAA,AAAsB,EACzC,WADmB,AACN,MAAM,AAAI,MAAM,4NAA8N,EAC3P,yBACA,WAES,EAAY,CAAA,EAAA,EAAA,uBAAA,AAAsB,EAC3C,WADqB,AACR,MAAM,AAAI,MAAM,gOAAkO,EAC/P,yBACA,qMCVJ,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OAGO,IAAM,EAAqB,CAC9B,MAAO,SACX,EAGe,SAAS,EAAO,UAAC,CAAQ,CAAgC,EACpE,MACI,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CAAK,KAAK,cACX,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,UACD,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,SAAS,CAAA,CAAC,MAAO,CACd,QAAS,EAAA,OAAO,CADnB,AAEG,mBAAmB,CACvB,QAFa,GAGR,OAKb","ignoreList":[0]}