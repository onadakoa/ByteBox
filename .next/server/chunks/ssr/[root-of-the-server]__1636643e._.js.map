{"version":3,"sources":["turbopack:///[next]/internal/font/google/poppins_9ac3ec3.module.css [app-ssr] (css module)","turbopack:///[next]/internal/font/google/poppins_9ac3ec3.js","turbopack:///[next]/internal/font/google/roboto_d5b2c989.module.css [app-ssr] (css module)","turbopack:///[next]/internal/font/google/roboto_d5b2c989.js","turbopack:///[project]/components/Loading/Loading.module.css [app-ssr] (css module)","turbopack:///[project]/components/Loading/Loading.tsx","turbopack:///[project]/hooks/useProductList.ts","turbopack:///[project]/hooks/useDebounce.ts","turbopack:///[project]/components/Admin/ManagerButton.module.css [app-ssr] (css module)","turbopack:///[project]/components/Admin/ManagerButton.tsx","turbopack:///[project]/components/Table/ListRow.module.css [app-ssr] (css module)","turbopack:///[project]/utils/ListContext.tsx","turbopack:///[project]/components/Table/ListRow.tsx","turbopack:///[project]/components/Table/ListCell.module.css [app-ssr] (css module)","turbopack:///[project]/components/Table/ListCell.tsx","turbopack:///[project]/components/Table/List.module.css [app-ssr] (css module)","turbopack:///[project]/components/Table/List.tsx","turbopack:///[project]/components/Admin/Manager.module.css [app-ssr] (css module)","turbopack:///[project]/components/Admin/MiniSearchBar.module.css [app-ssr] (css module)","turbopack:///[project]/components/Admin/MiniSearchBar.tsx","turbopack:///[project]/components/Admin/Manager.tsx","turbopack:///[project]/components/Admin/CategoriesManager.tsx","turbopack:///[project]/utils/Order.ts","turbopack:///[project]/components/Badge/Badge.module.css [app-ssr] (css module)","turbopack:///[project]/components/Badge/Badge.tsx","turbopack:///[project]/components/Table/ExpandableRow.module.css [app-ssr] (css module)","turbopack:///[project]/components/Table/ExpandableRow.tsx","turbopack:///[project]/components/Admin/OrdersManager.tsx","turbopack:///[project]/hooks/useStats.ts","turbopack:///[project]/components/Api/Stats.tsx","turbopack:///[project]/components/Admin/ProductsManager.tsx"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"poppins_9ac3ec3-module__ogIsha__className\",\n});\n","import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22font.ts%22,%22import%22:%22Poppins%22,%22arguments%22:[{%22weight%22:[%22200%22,%22300%22,%22400%22,%22500%22,%22600%22,%22700%22,%22800%22,%22900%22],%22subsets%22:[%22latin%22],%22fallback%22:[%22sans-serif%22]}],%22variableName%22:%22poppins%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Poppins', sans-serif\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n","__turbopack_context__.v({\n  \"className\": \"roboto_d5b2c989-module__7PeVaG__className\",\n});\n","import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22font.ts%22,%22import%22:%22Roboto%22,%22arguments%22:[{%22weight%22:[%22100%22,%22300%22,%22400%22,%22500%22,%22700%22,%22900%22],%22subsets%22:[%22latin%22],%22fallback%22:[%22sans-serif%22]}],%22variableName%22:%22roboto%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Roboto', sans-serif\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n","__turbopack_context__.v({\n  \"container\": \"Loading-module__5VDP-q__container\",\n  \"pulse\": \"Loading-module__5VDP-q__pulse\",\n});\n","import css from \"./Loading.module.css\";\nimport React from \"react\";\n\nexport function Loading(props: {\n    children?: React.ReactNode;\n}) {\n    return (\n        <span className={css.container}>{props.children}</span>\n    );\n}","import useSWR from \"swr\";\nimport {IProduct} from \"@/utils/Product\";\nimport {OutPacket} from \"@/utils/OutPacket\";\n\nexport default function useProductList(options: {\n    search?: string,\n    limit?: number,\n    page?: number,\n    category?: number,\n    price_in?: number,\n    price_out?: number,\n    sort?: string,\n} = {}) {\n    const params = new URLSearchParams();\n    if (options.search) params.append(\"search\", options.search);\n    if (options.limit) params.append(\"limit\", options.limit.toString());\n    if (options.page) params.append(\"page\", options.page.toString());\n    if (options.category) params.append(\"category\", options.category.toString());\n    if (options.price_in) params.append(\"price_in\", options.price_in.toString());\n    if (options.price_out) params.append(\"price_out\", options.price_out.toString());\n    if (options.sort) params.append(\"sort\", options.sort);\n    const {data, isLoading, error, mutate} = useSWR(`/products/index.php?${params.toString()}`);\n\n    return {\n        isLoading,\n        error,\n        data: data as OutPacket<IProduct[]>,\n        products: data?.d as IProduct[],\n        mutate\n    }\n}","import {useEffect, useState} from \"react\";\n\nexport function useDebounce<T>(value: T, delay: number = 2000) {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(() => {\n        const handler = setTimeout(() => {\n            setDebouncedValue(value);\n        }, delay)\n        return () => {\n            clearTimeout(handler);\n        }\n    }, [value, delay]);\n    return debouncedValue;\n}","__turbopack_context__.v({\n  \"container\": \"ManagerButton-module__cUw3dG__container\",\n});\n","import css from \"./ManagerButton.module.css\";\nimport {CSSProperties, ReactNode} from \"react\";\nimport Link from \"next/link\";\n\nexport function ManagerButton(props: {\n    children?: ReactNode,\n    width?: string,\n    padding?: string,\n    onClick?: () => void,\n    href?: string,\n    disabled?: boolean,\n}) {\n    const style: CSSProperties = {\n        width: props.width,\n        padding: props.padding,\n    }\n\n    if (props.href) {\n        return (\n            <Link href={props.href}>\n                <button className={css.container} style={style} disabled={props.disabled}>{props.children}</button>\n            </Link>\n        );\n    }\n\n    return (\n        <button onClick={props.onClick} className={css.container} style={style} disabled={props.disabled}>{props.children}</button>\n    );\n}\n","__turbopack_context__.v({\n  \"container\": \"ListRow-module__KhJOla__container\",\n  \"header\": \"ListRow-module__KhJOla__header\",\n});\n","\"use client\";\nimport React, {createContext, useContext} from \"react\";\n\nexport type ListPropertiesType = {\n    gridTemplateColumns?: string;\n};\nexport const ListPropertiesContext = createContext<ListPropertiesType>({});\n\nexport function ListContextProvider(props: ListPropertiesType & { children: React.ReactNode }) {\n    return (\n        <ListPropertiesContext.Provider value={props}>\n            {props.children}\n        </ListPropertiesContext.Provider>\n    );\n}\n\nexport function useListContext() {\n    return useContext(ListPropertiesContext);\n}","\"use client\";\nimport css from \"./ListRow.module.css\";\nimport React, {CSSProperties} from \"react\";\nimport {useListContext} from \"@/utils/ListContext\";\n\nexport type RowProps = { children: React.ReactNode, padding?: string, className?: string };\n\nexport default function ListRow(props: RowProps) {\n    const grid = useListContext();\n\n    const style: CSSProperties = {\n        padding: props.padding,\n        gridTemplateColumns: grid.gridTemplateColumns,\n    }\n    return (\n        <div className={[css.container, props.className].join(\" \")} style={style}>\n            {props.children}\n        </div>\n    );\n}\n\nexport function ListRowHeader(props: RowProps) {\n    const grid = useListContext();\n\n    const style: CSSProperties = {\n        padding: props.padding,\n        gridTemplateColumns: grid.gridTemplateColumns,\n    }\n    return (\n        <div className={[css.container, css.header, props.className].join(\" \")} style={style}>\n            {props.children}\n        </div>\n    );\n}\n","__turbopack_context__.v({\n  \"container\": \"ListCell-module__ZsMQza__container\",\n});\n","import css from \"./ListCell.module.css\"\nimport React, {CSSProperties} from \"react\";\n\nexport const ListCell = (props: { children?: React.ReactNode, className?: string, padding?: string, centerHorizontal?: boolean }) => {\n    const style: CSSProperties = {\n        padding: props.padding,\n        justifyContent: (props.centerHorizontal) ? \"center\" : undefined,\n        textAlign: (props.centerHorizontal) ? \"center\" : undefined,\n    }\n    return (\n        <div className={[css.container, props.className].join(\" \")} style={style}>\n            {props.children}\n        </div>\n    );\n};","__turbopack_context__.v({\n  \"container\": \"List-module__gn99Za__container\",\n});\n","import css from \"./List.module.css\";\nimport {poppins} from \"@/utils/font\";\nimport React, {CSSProperties} from \"react\";\nimport {ListContextProvider} from \"@/utils/ListContext\";\n\nexport const List = (props: { children?: React.ReactNode, className?: string, gridTemplateColumns?: string, border?: string }) => {\n    const style: CSSProperties = {\n        border: props.border\n    }\n    return (\n        <div className={[poppins.className, css.container, props.className].join(\" \")} style={style}>\n            <div>\n\n            <ListContextProvider gridTemplateColumns={props.gridTemplateColumns}>\n                {props.children}\n            </ListContextProvider>\n\n            </div>\n        </div>\n    );\n};\n\n\n","__turbopack_context__.v({\n  \"action\": \"Manager-module__nhQrBa__action\",\n  \"container\": \"Manager-module__nhQrBa__container\",\n});\n","__turbopack_context__.v({\n  \"input\": \"MiniSearchBar-module__SrX-CW__input\",\n});\n","\"use client\";\nimport css from \"./MiniSearchBar.module.css\";\nimport {poppins} from \"@/utils/font\";\nimport React, {ChangeEventHandler} from \"react\";\n\nexport const MiniSearchBar = (props: {\n    value?: string,\n    setValue?: ChangeEventHandler<HTMLInputElement>,\n}) => {\n    return (\n        <input className={[poppins.className, css.input].join(\" \")} value={props.value} onChange={props.setValue} type=\"text\"\n               placeholder={\"Search...\"}/>\n    );\n};","import css from \"./Manager.module.css\";\nimport {MiniSearchBar} from \"@/components/Admin/MiniSearchBar\";\nimport {List} from \"@/components/Table/List\";\nimport React, {ChangeEventHandler, ReactNode} from \"react\";\n\n/*\n    use `<ListRow>` in children component\n */\nexport const Manager = (props: {\n    searchValue?: string,\n    setSearchValue?: ChangeEventHandler<HTMLInputElement>,\n    children?: ReactNode,\n    additionalSettings?: ReactNode,\n    additionalButtons?: ReactNode,\n    gridTemplateColumns?: string,\n    dontShowAction?: boolean,\n    actionGridTemplateColumns?: string,\n}) => {\n    return (\n        <div className={css.container}>\n            {(!props.dontShowAction) ? (\n                <div className={css.action} style={{gridTemplateColumns: props.actionGridTemplateColumns}}>\n                    <div><MiniSearchBar value={props.searchValue} setValue={props.setSearchValue}/></div>\n                    <div>{props.additionalSettings}</div>\n                    <div>{props.additionalButtons}</div>\n                </div>\n            ) : undefined}\n\n            <div className={css.table}>\n                <List gridTemplateColumns={props.gridTemplateColumns}>\n                    {props.children}\n                </List>\n            </div>\n        </div>\n    );\n};","\"use client\";\nimport { ManagerButton } from \"@/components/Admin/ManagerButton\";\nimport ListRow, { ListRowHeader } from \"@/components/Table/ListRow\";\nimport { ListCell } from \"@/components/Table/ListCell\";\nimport { Manager } from \"@/components/Admin/Manager\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDebounce } from \"@/hooks/useDebounce\";\nimport { ICategory } from \"@/utils/Category\";\n\nexport const CategoriesManager = (props: {\n    dontShowItemsAction?: boolean,\n    dontShowAction?: boolean,\n}) => {\n    const [search, setSearch] = useState(\"\");\n    const [categories, setCategories] = useState<ICategory[]>([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState<Error | null>(null);\n    const debouncedSearch = useDebounce(search, 500);\n\n    const fetchCategories = async () => {\n        setIsLoading(true);\n        try {\n            const response = await fetch(`/api/categories/index.php${debouncedSearch ? `?search=${debouncedSearch}` : ''}`, {\n                credentials: \"include\",\n                method: \"GET\",\n            });\n            if (!response.ok) {\n                throw new Error(\"Failed to fetch categories\");\n            }\n            const data = await response.json();\n            setCategories(data.d || []);\n            setError(null);\n        } catch (error) {\n            console.error(\"Error fetching categories:\", error);\n            setError(error instanceof Error ? error : new Error(\"Unknown error\"));\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    // Fetch categories\n    useEffect(() => {\n\n        fetchCategories();\n    }, [debouncedSearch]);\n\n    const onDelete = async (id: string) => {\n        const res = await fetch(`/api/categories/index.php?id=${id}`, {\n            credentials: \"include\",\n            method: \"DELETE\"\n        });\n\n        if (res.ok) fetchCategories();\n        else console.error(\"error deleting category\");\n    }\n\n    return (\n        <Manager gridTemplateColumns={\"100px 1fr 150px\"}\n            additionalButtons={\n                <>\n                    <ManagerButton href=\"/categories/create\">Add Category</ManagerButton>\n                </>\n            }\n            searchValue={search}\n            setSearchValue={(e) => setSearch(e.target.value)}\n            dontShowAction={props.dontShowAction}\n        >\n            <ListRowHeader>\n                <ListCell>ID</ListCell>\n                <ListCell>Name</ListCell>\n                {!props.dontShowItemsAction && <ListCell centerHorizontal>Action</ListCell>}\n            </ListRowHeader>\n            {(isLoading || error) ? (\n                <ListRow>\n                    <ListCell centerHorizontal>\n                        {isLoading ? \"Loading...\" : `Error: ${error?.message}`}\n                    </ListCell>\n                </ListRow>\n            ) : categories.length === 0 ? (\n                <ListRow>\n                    <ListCell centerHorizontal>\n                        No categories found\n                    </ListCell>\n                </ListRow>\n            ) : categories.map((category) => (\n                <ListRow key={category.id}>\n                    <ListCell>#{category.id}</ListCell>\n                    <ListCell>{category.name}</ListCell>\n                    {!props.dontShowItemsAction && <ListCell centerHorizontal>\n                        <ManagerButton href={`/categories/create?id=${category.id}`}>Edit</ManagerButton>\n                        -\n                        <ManagerButton onClick={() => { onDelete(category.id.toString()) }}>Delete</ManagerButton>\n                    </ListCell>}\n                </ListRow>\n            ))}\n        </Manager>\n    );\n};","export enum OrderStatus {\n    pending = \"pending\",\n    paid = \"paid\",\n    shipping = \"shipping\",\n    delivered = \"delivered\",\n    canceled = \"canceled\",\n}\n\nexport interface IOrderItem {\n    order_item_id: number;\n    order_id: number;\n    product_id: number;\n    quantity: number;\n    price: number;\n    name: string;\n}\n\nexport interface IOrder {\n    order_id: number;\n    user_id: number;\n    provider_id: number;\n    created_at: number;\n    status: OrderStatus\n    first_name: string;\n    last_name: string;\n    phone_number: string;\n    postal_code: string;\n    city: string\n    street: string;\n    building_number: string;\n    apartment_number: string | null;\n    total_price: number;\n\n    items: IOrderItem[];\n}","__turbopack_context__.v({\n  \"container\": \"Badge-module__6EVb2G__container\",\n  \"default\": \"Badge-module__6EVb2G__default\",\n  \"error\": \"Badge-module__6EVb2G__error\",\n  \"info\": \"Badge-module__6EVb2G__info\",\n  \"pending\": \"Badge-module__6EVb2G__pending\",\n  \"success\": \"Badge-module__6EVb2G__success\",\n});\n","import css from \"./Badge.module.css\";\nimport React, {CSSProperties} from \"react\";\n\nexport type variant = \"default\" | \"success\" | \"pending\" | \"error\" | \"info\";\n\nexport default function Badge(props: {\n    children?: React.ReactNode,\n    variant?: variant,\n\n    backgroundColor?: string,\n    borderColor?: string,\n    border?: string,\n    color?: string,\n    padding?: string,\n\n    className?: string,\n\n}) {\n    const style: CSSProperties = {\n        backgroundColor: props.backgroundColor,\n        borderColor: props.borderColor,\n        border: props.border,\n        color: props.color,\n        padding: props.padding,\n    }\n    return (\n        <div className={[css.container, props.variant ? css[props.variant] : undefined, props.className].join(\" \")}\n             style={style}>{props.children}</div>\n    );\n}\n","__turbopack_context__.v({\n  \"container\": \"ExpandableRow-module__76n8nG__container\",\n  \"content\": \"ExpandableRow-module__76n8nG__content\",\n  \"expanded\": \"ExpandableRow-module__76n8nG__expanded\",\n});\n","\"use client\";\nimport css from \"./ExpandableRow.module.css\";\nimport React, {CSSProperties} from \"react\";\nimport ListRow, {RowProps} from \"./ListRow\";\n\nexport function ExpandableRow(props: RowProps & {\n    content?: React.ReactNode,\n    backgroundColor?: string,\n    indentation?: string,\n}) {\n    const [expanded, setExpanded] = React.useState(false);\n\n    const style: CSSProperties = {\n        padding: props.padding\n    }\n    const contentStyle: CSSProperties = {\n        paddingLeft: props.indentation ? props.indentation : undefined,\n    }\n    const expand = () => {\n        setExpanded(!expanded);\n    }\n    const contentClick = (event: React.MouseEvent) => {\n        event.stopPropagation();\n    }\n\n    return (\n        <div className={[props.className, css.container, (expanded) ? css.expanded : undefined].join(\" \")} style={style} onClick={expand}>\n            <ListRow>\n                {props.children}\n            </ListRow>\n            <div className={css.content} style={contentStyle}>\n                <div onClick={contentClick} style={{backgroundColor: props.backgroundColor}}>\n                    {props.content}\n                </div>\n            </div>\n        </div>\n    );\n}","\"use client\";\nimport {ManagerButton} from \"@/components/Admin/ManagerButton\";\nimport ListRow, {ListRowHeader} from \"@/components/Table/ListRow\";\nimport {ListCell} from \"@/components/Table/ListCell\";\nimport {Manager} from \"@/components/Admin/Manager\";\nimport React, {useEffect, useState} from \"react\";\nimport {useDebounce} from \"@/hooks/useDebounce\";\nimport {IOrder, OrderStatus} from \"@/utils/Order\";\nimport Badge from \"@/components/Badge/Badge\";\nimport {ExpandableRow} from \"@/components/Table/ExpandableRow\";\nimport {List} from \"@/components/Table/List\";\nimport {mutate} from \"swr\";\n\nexport const OrdersManager = (props: {\n    dontShowItemsAction?: boolean,\n    dontShowAction?: boolean,\n}) => {\n    const [search, setSearch] = useState(\"\");\n    const [orders, setOrders] = useState<IOrder[]>([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState<Error | null>(null);\n    const debouncedSearch = useDebounce(search, 500);\n\n    // Fetch orders\n    useEffect(() => {\n        const fetchOrders = async () => {\n            setIsLoading(true);\n            try {\n                const response = await fetch(`/api/order/all.php${debouncedSearch ? `?search=${debouncedSearch}` : ''}`, {\n                    credentials: \"include\",\n                    method: \"GET\",\n                });\n                if (!response.ok) {\n                    throw new Error(\"Failed to fetch orders\");\n                }\n                const data = await response.json();\n                setOrders(data.d || []);\n                setError(null);\n            } catch (error) {\n                console.error(\"Error fetching orders:\", error);\n                setError(error instanceof Error ? error : new Error(\"Unknown error\"));\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        fetchOrders();\n    }, [debouncedSearch]);\n\n    // Update order status\n    const updateOrderStatus = async (orderId: number, status: OrderStatus) => {\n        try {\n            const response = await fetch('/api/order/index.php', {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                credentials: 'include',\n                body: JSON.stringify({\n                    id: orderId,\n                    status: status,\n                }),\n            });\n\n            if (!response.ok) {\n                throw new Error('Failed to update order status');\n            }\n\n            // Update local state\n            setOrders(orders.map(order =>\n                order.order_id === orderId ? {...order, status} : order\n            ));\n\n            // Revalidate SWR cache\n            mutate('/api/order/index.php');\n\n            return true;\n        } catch (error) {\n            console.error('Error updating order status:', error);\n            return false;\n        }\n    };\n\n    // Cancel/Delete order\n    const cancelOrder = async (orderId: number) => {\n        try {\n            const response = await fetch(`/api/order/cancel.php?id=${orderId}`, {\n                method: 'GET',\n                credentials: 'include',\n            });\n\n            if (!response.ok) {\n                throw new Error('Failed to cancel order');\n            }\n\n            // Update local state\n            setOrders(orders.map(order =>\n                order.order_id === orderId ? {...order, status: OrderStatus.canceled} : order\n            ));\n\n            // Revalidate SWR cache\n            mutate('/api/order/index.php');\n\n            return true;\n        } catch (error) {\n            console.error('Error canceling order:', error);\n            return false;\n        }\n    };\n\n    // Format date\n    const formatDate = (timestamp: number) => {\n        const date = new Date(timestamp * 1000);\n        return `${date.getHours()}:${date.getMinutes()} ${date.getDate()}.${date.getMonth() + 1}.${date.getFullYear()}`;\n    };\n\n    // Get badge variant based on status\n    const getBadgeVariant = (status: OrderStatus) => {\n        switch (status) {\n            case OrderStatus.pending:\n                return \"pending\";\n            case OrderStatus.paid:\n                return \"success\";\n            case OrderStatus.shipping:\n                return \"info\";\n            case OrderStatus.delivered:\n                return \"success\";\n            case OrderStatus.canceled:\n                return \"error\";\n            default:\n                return \"pending\";\n        }\n    };\n\n    return (\n        <Manager gridTemplateColumns={\"100px 1fr 150px 150px 150px 200px\"}\n                 searchValue={search}\n                 setSearchValue={(e) => setSearch(e.target.value)}\n                 dontShowAction={props.dontShowAction}\n        >\n            <ListRowHeader>\n                <ListCell>#</ListCell>\n                <ListCell>Date</ListCell>\n                <ListCell>Total Price</ListCell>\n                <ListCell>Author</ListCell>\n                <ListCell centerHorizontal>Status</ListCell>\n                {!props.dontShowItemsAction && <ListCell centerHorizontal>Action</ListCell>}\n            </ListRowHeader>\n            {(isLoading || error) ? (\n                <ListRow>\n                    <ListCell centerHorizontal>\n                        {isLoading ? \"Loading...\" : `Error: ${error?.message}`}\n                    </ListCell>\n                </ListRow>\n            ) : orders.length === 0 ? (\n                <ListRow>\n                    <ListCell centerHorizontal>\n                        No orders found\n                    </ListCell>\n                </ListRow>\n            ) : orders.map((order) => (\n                <ExpandableRow key={order.order_id} padding={\"5px 0\"} content={(\n                    <List gridTemplateColumns={\"50px 3fr 100px 100px\"}>\n                        <ListRowHeader>\n                            <ListCell>#</ListCell>\n                            <ListCell>Product</ListCell>\n                            <ListCell>Price</ListCell>\n                            <ListCell centerHorizontal>Quantity</ListCell>\n                        </ListRowHeader>\n                        {order.items.map((item) => (\n                            <ListRow key={item.order_item_id}>\n                                <ListCell>#{item.product_id}</ListCell>\n                                <ListCell>{item.name}</ListCell>\n                                <ListCell>{item.price} zł</ListCell>\n                                <ListCell centerHorizontal>{item.quantity}</ListCell>\n                            </ListRow>\n                        ))}\n                    </List>\n                )}>\n                    <ListCell>#{order.order_id}</ListCell>\n                    <ListCell>{formatDate(order.created_at)}</ListCell>\n                    <ListCell>{order.total_price} zł</ListCell>\n                    <ListCell>{order.first_name} {order.last_name}</ListCell>\n                    <ListCell centerHorizontal>\n                        <Badge variant={getBadgeVariant(order.status)}>{order.status}</Badge>\n                    </ListCell>\n                    {!props.dontShowItemsAction && <ListCell centerHorizontal>\n                        {(\n                            <>\n                                <select\n                                    value={order.status}\n                                    onChange={(e) => updateOrderStatus(order.order_id, e.target.value as OrderStatus)}\n                                    style={{marginRight: '10px'}}\n                                >\n                                    {Object.values(OrderStatus).map(status => (\n                                        <option key={status} value={status}>{status}</option>\n                                    ))}\n                                </select>\n                                {order.status !== OrderStatus.canceled &&\n                                    <ManagerButton onClick={() => cancelOrder(order.order_id)}>Cancel</ManagerButton>}\n                            </>\n                        )}\n                    </ListCell>}\n                </ExpandableRow>\n            ))}\n        </Manager>\n    );\n};\n","import useSWR from \"swr\";\nimport {OutPacket} from \"@/utils/OutPacket\";\n\nexport interface IStats {\n    product_count: number,\n    avg_product_price: number,\n    user_count: number,\n}\n\nexport default function useStats() {\n    const {data, error, isLoading} = useSWR(\"/stats/index.php\");\n\n    return {\n        isLoading,\n        error,\n        stats: data as OutPacket<IStats>\n    };\n}","\"use client\";\n\nimport useStats from \"@/hooks/useStats\";\nimport {Loading} from \"@/components/Loading/Loading\";\n\n\nexport const Stats = (props: {\n    children: string,\n}) => {\n    const {stats, error, isLoading} = useStats();\n\n    if (isLoading || error) return (\n        <Loading>-</Loading>\n    );\n    return (\n        <>\n            {(stats.d as any)[props.children]}\n        </>\n    );\n};\n","\"use client\";\nimport {ManagerButton} from \"@/components/Admin/ManagerButton\";\nimport ListRow, {ListRowHeader} from \"@/components/Table/ListRow\";\nimport {ListCell} from \"@/components/Table/ListCell\";\nimport {Manager} from \"@/components/Admin/Manager\";\nimport React from \"react\";\nimport useProductList from \"@/hooks/useProductList\";\nimport {useDebounce} from \"@/hooks/useDebounce\";\n\nexport const ProductsManager = (props: {\n    dontShowItemsAction?: boolean,\n    dontShowAction?: boolean,\n}) => {\n    const [search, setSearch] = React.useState(\"\");\n    const debouncedSearch = useDebounce(search, 500);\n    const {isLoading, error, products, mutate} = useProductList({search: debouncedSearch});\n\n    const onDelete = async (id: string) => {\n        const res = await fetch(`/api/products/index.php?id=${id}`, {\n            credentials: \"include\",\n            method: \"DELETE\"\n        })\n        if (res.ok) {\n            await mutate();\n        } else {\n            console.error(\"error deleting product\")\n        }\n    }\n\n    return (\n        <Manager gridTemplateColumns={\"100px 1fr 100px 200px\"}\n                 additionalButtons={\n                     <>\n                         <ManagerButton href=\"/products/create\">Add item</ManagerButton>\n                     </>\n                 }\n                 searchValue={search}\n                 setSearchValue={(e) => setSearch(e.target.value)}\n                 dontShowAction={props.dontShowAction}\n        >\n            <ListRowHeader>\n                <ListCell>id</ListCell>\n                <ListCell>name</ListCell>\n                <ListCell>price</ListCell>\n                {!props.dontShowItemsAction && <ListCell centerHorizontal>action</ListCell>}\n            </ListRowHeader>\n            {(isLoading || error) ? undefined : products.map((product) => (\n                <ListRow key={product.product_id}>\n                    <ListCell>#{product.product_id}</ListCell>\n                    <ListCell>{product.name}</ListCell>\n                    <ListCell>{product.price}zł</ListCell>\n                    {!props.dontShowItemsAction && <ListCell centerHorizontal>\n                        <ManagerButton href={`/products/create?id=${product.product_id}`}>Edit</ManagerButton>\n                        -\n                        <ManagerButton onClick={() => {onDelete(product.product_id.toString())}}>Delete</ManagerButton>\n                    </ListCell>}\n                </ListRow>\n            ))}\n        </Manager>\n    );\n};"],"names":[],"mappings":"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","ignoreList":[0,1,2,3]}